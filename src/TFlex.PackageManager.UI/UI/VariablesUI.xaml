<Window x:Class="TFlex.PackageManager.UI.VariablesUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:l="clr-namespace:TFlex.PackageManager.Configuration"
        Height="300" 
        Width="600" 
        WindowStyle="ToolWindow" 
        ResizeMode="NoResize" 
        Loaded="Window_Loaded">

    <Grid TextOptions.TextFormattingMode="Display" 
          UseLayoutRounding="True" 
          Margin="10">

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="24"/>
        </Grid.RowDefinitions>

        <DataGrid Grid.Row="0" 
                  Name="dataGrid" 
                  Margin="0,0,0,10" 
                  AutoGenerateColumns="False" 
                  VerticalGridLinesBrush="White" 
                  HorizontalGridLinesBrush="LightGray" 
                  RowHeaderWidth="20" ItemsSource="{Binding}">
            <DataGrid.Resources>
                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="Background" Value="Red"/>
                            <Setter Property="ToolTip" Value="{
                                Binding RelativeSource={RelativeSource Self}, 
                                Path=(Validation.Errors)/ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.RowValidationRules>
                <l:VariableValidationRule ValidationStep="UpdatedValue"/>
            </DataGrid.RowValidationRules>
            <DataGrid.RowValidationErrorTemplate>
                <ControlTemplate>
                    <Grid Margin="0,-2,0,-2" 
                          ToolTip="{
                        Binding RelativeSource={RelativeSource FindAncestor, 
                        AncestorType={x:Type DataGridRow}}, 
                        Path=(Validation.Errors)/ErrorContent}">
                        <Ellipse StrokeThickness="0" 
                                 Fill="Red" Width="{TemplateBinding FontSize}" 
                                 Height="{TemplateBinding FontSize}"/>
                        <TextBlock Text="!" 
                                   FontSize="{TemplateBinding FontSize}" 
                                   FontWeight="Bold" Foreground="White" 
                                   HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </DataGrid.RowValidationErrorTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn x:Name="column_1" 
                                    Header="Name" 
                                    Width="*" 
                                    EditingElementStyle="{StaticResource errorStyle}" 
                                    Binding="{Binding Name, 
                    UpdateSourceTrigger=PropertyChanged, 
                    ValidatesOnNotifyDataErrors=True}" />
                <DataGridTextColumn x:Name="column_2" 
                                    Header="Old Name" 
                                    Width="*" 
                                    EditingElementStyle="{StaticResource errorStyle}" 
                                    Binding="{Binding OldName, 
                    UpdateSourceTrigger=PropertyChanged, 
                    ValidatesOnNotifyDataErrors=True}" />
                <DataGridTextColumn x:Name="column_3" 
                                    Header="Group" 
                                    Width="*" 
                                    Binding="{Binding Group}"/>
                <DataGridTextColumn x:Name="column_4" 
                                    Header="Expression" 
                                    Width="*" Binding="{Binding Expression}"/>
                <DataGridCheckBoxColumn x:Name="column_5" 
                                        Header="[ - ]" 
                                        MaxWidth="29" 
                                        MinWidth="29"
                                        Binding="{Binding External}">
                    <DataGridCheckBoxColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGridCheckBoxColumn.HeaderStyle>
                </DataGridCheckBoxColumn>
            </DataGrid.Columns>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Padding="{TemplateBinding Padding}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" 
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsEditing" Value="True">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="DarkBlue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>

        <StackPanel Grid.Row="1" 
                    Orientation="Horizontal" 
                    HorizontalAlignment="Right">
            <Button Name="button_1" 
                    Width="80" 
                    Padding="2" 
                    Margin="0,0,0,0" 
                    Click="Button1_Click">OK</Button>
            <Button Name="button_2" 
                    Width="80" 
                    Padding="2" 
                    Margin="10,0,0,0" 
                    Click="Button2_Click">Cancel</Button>
        </StackPanel>

    </Grid>

</Window>
