<UserControl x:Class="TFlex.PackageManager.Controls.TreeListViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:l="clr-namespace:TFlex.PackageManager.Controls"
             xmlns:c="clr-namespace:TFlex.PackageManager.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="400" 
             d:DesignWidth="500">

    <UserControl.Resources>

        <c:LevelToIndentConverter x:Key="levelToIndentConverter"/>

        <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
            <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0, 0, 1, 1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Border x:Name="HeaderBorder" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter 
                                x:Name="HeaderContent" 
                                TextElement.Foreground="Black" 
                                TextElement.FontSize="12" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                TextOptions.TextFormattingMode="Display"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#FFC8DEF5"/>
                            </Trigger>
                            <Trigger Property="IsMouseCaptured" Value="true">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="#FF007ACC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton" >
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="19" Height="16" Background="Transparent">
                            <Path x:Name="ExpandPath" 
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Center" 
                                  Stroke="Black" 
                                  Data="M 6 1 L 10 5 L 6 9 Z"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Fill" Value="Black"/>
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="{x:Null}"/>
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 4 7 L 11 0 L 11 7 Z"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="true"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#FF007ACC"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF007ACC"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type l:TreeListViewItem}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type l:TreeListViewItem}">
                        <StackPanel>
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter 
                                    x:Name="PART_Header" 
                                    Content="{TemplateBinding Header}" 
                                    Columns="{
                                        Binding Path=Columns, 
                                        RelativeSource={RelativeSource AncestorType=l:TreeListView}
                                    }"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{
                                        Binding Path=IsActive, 
                                        RelativeSource={RelativeSource AncestorType=Window}}" Value="false"/>
                                    <Condition Binding="{
                                        Binding Path=IsSelected, 
                                        RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type l:TreeListView}">
            <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type l:TreeListView}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">

                            <DockPanel>
                                <GridViewHeaderRowPresenter 
                                    Columns="{
                                        Binding Path=Columns, 
                                        RelativeSource={RelativeSource Mode=TemplatedParent}
                                    }" 
                                    ColumnHeaderContainerStyle="{StaticResource ResourceKey=GridViewColumnHeaderStyle}"
                                    DockPanel.Dock="Top"/>

                                <ScrollViewer 
                                    Focusable="False" 
                                    VerticalScrollBarVisibility="Auto" 
                                    HorizontalScrollBarVisibility="Disabled">

                                    <ItemsPresenter/>

                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="CellTemplateLabel">
            <DockPanel>
                <ToggleButton 
                    x:Name="Expander"
                    Style="{StaticResource ExpandCollapseToggleStyle}" 
                    Margin="{
                        Binding Path=Level, 
                        Converter={StaticResource levelToIndentConverter}, 
                        RelativeSource={RelativeSource AncestorType=l:TreeListViewItem}
                    }"
                    IsChecked="{
                        Binding Path=IsExpanded, 
                        RelativeSource={RelativeSource AncestorType=l:TreeListViewItem}
                    }"
                    ClickMode="Press"/>
                <CheckBox 
                    x:Name="Cb"
                    Tag="{
                        Binding Path=Tag, 
                        RelativeSource={RelativeSource AncestorType=l:TreeListViewItem}
                    }"
                    Focusable="False" 
                    Checked="CheckBox_Checked" 
                    Unchecked="CheckBox_Unchecked" 
                    Margin="0,0,4,0" 
                    VerticalAlignment="Center">
                    <CheckBox.LayoutTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1.1" />
                    </CheckBox.LayoutTransform>
                </CheckBox>
                <Image Source="{
                    Binding Path=ImageSource, 
                    RelativeSource={RelativeSource AncestorType=l:TreeListViewItem}
                    }"
                    Width="16" 
                    Margin="0,0,4,0"/>
                <TextBlock 
                    Text="{Binding}" 
                    TextOptions.TextFormattingMode="Display"/>
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{
                    Binding Path=HasItems, 
                    RelativeSource={RelativeSource AncestorType=l:TreeListViewItem}}" Value="False">
                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{
                    Binding Path=CheckboxesVisible, 
                    RelativeSource={RelativeSource AncestorType=l:TreeListView}}" Value="False">
                    <Setter TargetName="Cb" Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="CellTemplateCheckBox">
            <DockPanel>
                <CheckBox x:Name="Cb"
                    Tag="{
                        Binding Path=Tag, 
                        RelativeSource={RelativeSource AncestorType=l:TreeListViewItem}
                    }"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    Focusable="False" 
                    Checked="CheckBox_Checked" 
                    Unchecked="CheckBox_Unchecked">
                    <CheckBox.LayoutTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1.1" />
                    </CheckBox.LayoutTransform>
                </CheckBox>
            </DockPanel>
        </DataTemplate>

    </UserControl.Resources>

</UserControl>